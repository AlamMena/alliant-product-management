// <auto-generated />
using System;
using AlliantProductManagementServer.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AlliantProductManagementServer.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250122212727_Users")]
    partial class Users
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AlliantProductManagementServer.Domain.Entities.Customers.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 16, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Email = "john.doe@example.com",
                            Identification = "123456789",
                            IsDeleted = false,
                            LastName = "Doe",
                            Name = "John",
                            Note = "Seed data",
                            PhoneNumber = "555-1234",
                            UpdatedAt = new DateTime(2025, 1, 15, 19, 30, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 16, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Email = "jane.smith@example.com",
                            Identification = "987654321",
                            IsDeleted = false,
                            LastName = "Smith",
                            Name = "Jane",
                            Note = "Seed data",
                            PhoneNumber = "555-9876",
                            UpdatedAt = new DateTime(2025, 1, 15, 19, 30, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 16, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Email = "alice.johnson@example.com",
                            Identification = "112233445",
                            IsDeleted = false,
                            LastName = "Johnson",
                            Name = "Alice",
                            Note = "Seed data",
                            PhoneNumber = "555-1122",
                            UpdatedAt = new DateTime(2025, 1, 15, 19, 30, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 16, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Email = "bob.brown@example.com",
                            Identification = "556677889",
                            IsDeleted = false,
                            LastName = "Brown",
                            Name = "Bob",
                            Note = "Seed data",
                            PhoneNumber = "555-3344",
                            UpdatedAt = new DateTime(2025, 1, 15, 19, 30, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 1, 1, 16, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Email = "charlie.davis@example.com",
                            Identification = "998877665",
                            IsDeleted = false,
                            LastName = "Davis",
                            Name = "Charlie",
                            Note = "Seed data",
                            PhoneNumber = "555-5566",
                            UpdatedAt = new DateTime(2025, 1, 15, 19, 30, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("AlliantProductManagementServer.Domain.Entities.Customers.CustomerProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("CustomerProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 16, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            CustomerId = 1,
                            IsDeleted = false,
                            Note = "Seed data",
                            Price = 20.0m,
                            ProductId = 1,
                            Quantity = 2,
                            UpdatedAt = new DateTime(2025, 1, 15, 19, 30, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 16, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            CustomerId = 1,
                            IsDeleted = false,
                            Note = "Seed data",
                            Price = 15.0m,
                            ProductId = 2,
                            Quantity = 1,
                            UpdatedAt = new DateTime(2025, 1, 15, 19, 30, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 16, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            CustomerId = 2,
                            IsDeleted = false,
                            Note = "Seed data",
                            Price = 30.0m,
                            ProductId = 3,
                            Quantity = 3,
                            UpdatedAt = new DateTime(2025, 1, 15, 19, 30, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 16, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            CustomerId = 3,
                            IsDeleted = false,
                            Note = "Seed data",
                            Price = 12.0m,
                            ProductId = 6,
                            Quantity = 1,
                            UpdatedAt = new DateTime(2025, 1, 15, 19, 30, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 1, 1, 16, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            CustomerId = 3,
                            IsDeleted = false,
                            Note = "Seed data",
                            Price = 18.0m,
                            ProductId = 7,
                            Quantity = 2,
                            UpdatedAt = new DateTime(2025, 1, 15, 19, 30, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 1, 1, 16, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            CustomerId = 4,
                            IsDeleted = false,
                            Note = "Seed data",
                            Price = 40.0m,
                            ProductId = 10,
                            Quantity = 4,
                            UpdatedAt = new DateTime(2025, 1, 15, 19, 30, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 1, 1, 16, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            CustomerId = 5,
                            IsDeleted = false,
                            Note = "Seed data",
                            Price = 45.0m,
                            ProductId = 15,
                            Quantity = 3,
                            UpdatedAt = new DateTime(2025, 1, 15, 19, 30, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("AlliantProductManagementServer.Domain.Entities.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Flagship smartphone with high-end features",
                            IsDeleted = false,
                            Name = "Samsung Galaxy S23",
                            Note = "Seed data",
                            Price = 799.99m,
                            UpdatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "High-performance laptop for professionals",
                            IsDeleted = false,
                            Name = "Apple MacBook Pro 16\" M1",
                            Note = "Seed data",
                            Price = 2399.99m,
                            UpdatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Smart TV with immersive 4K resolution",
                            IsDeleted = false,
                            Name = "Sony 4K Ultra HD TV",
                            Note = "Seed data",
                            Price = 1199.99m,
                            UpdatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Noise-cancelling headphones with premium sound",
                            IsDeleted = false,
                            Name = "Bose QuietComfort 45 Headphones",
                            Note = "Seed data",
                            Price = 329.99m,
                            UpdatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "High-performance DSLR for photographers",
                            IsDeleted = false,
                            Name = "Canon EOS 90D Camera",
                            Note = "Seed data",
                            Price = 1299.99m,
                            UpdatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Premium smartphone with amazing camera",
                            IsDeleted = false,
                            Name = "Apple iPhone 13",
                            Note = "Seed data",
                            Price = 699.99m,
                            UpdatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Smartwatch with fitness tracking",
                            IsDeleted = false,
                            Name = "Samsung Smartwatch Galaxy",
                            Note = "Seed data",
                            Price = 249.99m,
                            UpdatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "High-quality OLED TV with stunning colors",
                            IsDeleted = false,
                            Name = "LG OLED 55\" TV",
                            Note = "Seed data",
                            Price = 1499.99m,
                            UpdatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Powerful tablet with laptop functionality",
                            IsDeleted = false,
                            Name = "Microsoft Surface Pro 7",
                            Note = "Seed data",
                            Price = 849.99m,
                            UpdatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Smart thermostat with energy savings",
                            IsDeleted = false,
                            Name = "Google Nest Thermostat",
                            Note = "Seed data",
                            Price = 129.99m,
                            UpdatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Classic novel by F. Scott Fitzgerald",
                            IsDeleted = false,
                            Name = "The Great Gatsby",
                            Note = "Seed data",
                            Price = 10.99m,
                            UpdatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Dystopian novel by George Orwell",
                            IsDeleted = false,
                            Name = "1984",
                            Note = "Seed data",
                            Price = 12.99m,
                            UpdatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "J.D. Salinger's novel about teenage rebellion",
                            IsDeleted = false,
                            Name = "The Catcher in the Rye",
                            Note = "Seed data",
                            Price = 9.99m,
                            UpdatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Harper Lee's Pulitzer Prize-winning novel",
                            IsDeleted = false,
                            Name = "To Kill a Mockingbird",
                            Note = "Seed data",
                            Price = 11.99m,
                            UpdatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Classic novel by Jane Austen",
                            IsDeleted = false,
                            Name = "Pride and Prejudice",
                            Note = "Seed data",
                            Price = 14.99m,
                            UpdatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Herman Melville's epic about obsession",
                            IsDeleted = false,
                            Name = "Moby-Dick",
                            Note = "Seed data",
                            Price = 13.99m,
                            UpdatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Homer's ancient Greek epic poem",
                            IsDeleted = false,
                            Name = "The Odyssey",
                            Note = "Seed data",
                            Price = 15.99m,
                            UpdatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Leo Tolstoy's epic about Napoleonic wars",
                            IsDeleted = false,
                            Name = "War and Peace",
                            Note = "Seed data",
                            Price = 19.99m,
                            UpdatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Fyodor Dostoevsky's novel about morality",
                            IsDeleted = false,
                            Name = "Crime and Punishment",
                            Note = "Seed data",
                            Price = 18.99m,
                            UpdatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Dostoevsky's exploration of faith and doubt",
                            IsDeleted = false,
                            Name = "The Brothers Karamazov",
                            Note = "Seed data",
                            Price = 16.99m,
                            UpdatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Cotton t-shirt in various colors",
                            IsDeleted = false,
                            Name = "T-shirt",
                            Note = "Seed data",
                            Price = 15.99m,
                            UpdatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Denim jeans for men and women",
                            IsDeleted = false,
                            Name = "Jeans",
                            Note = "Seed data",
                            Price = 29.99m,
                            UpdatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Stylish leather jacket for winter",
                            IsDeleted = false,
                            Name = "Leather Jacket",
                            Note = "Seed data",
                            Price = 89.99m,
                            UpdatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Comfortable sneakers for casual wear",
                            IsDeleted = false,
                            Name = "Sneakers",
                            Note = "Seed data",
                            Price = 49.99m,
                            UpdatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Warm and stylish coat for cold weather",
                            IsDeleted = false,
                            Name = "Winter Coat",
                            Note = "Seed data",
                            Price = 120.00m,
                            UpdatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Soft woolen sweater for layering",
                            IsDeleted = false,
                            Name = "Sweater",
                            Note = "Seed data",
                            Price = 40.00m,
                            UpdatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Baseball cap in various colors",
                            IsDeleted = false,
                            Name = "Cap",
                            Note = "Seed data",
                            Price = 18.00m,
                            UpdatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Wool scarf for winter warmth",
                            IsDeleted = false,
                            Name = "Scarf",
                            Note = "Seed data",
                            Price = 25.00m,
                            UpdatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Comfortable cotton socks",
                            IsDeleted = false,
                            Name = "Socks",
                            Note = "Seed data",
                            Price = 5.00m,
                            UpdatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Leather belt for formal and casual wear",
                            IsDeleted = false,
                            Name = "Belt",
                            Note = "Seed data",
                            Price = 30.00m,
                            UpdatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("AlliantProductManagementServer.Domain.Entities.Products.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ProductCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Devices and gadgets",
                            IsDeleted = false,
                            Name = "Electronics",
                            Note = "Seed data",
                            UpdatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Printed and digital books",
                            IsDeleted = false,
                            Name = "Books",
                            Note = "Seed data",
                            UpdatedAt = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Apparel and fashion",
                            IsDeleted = false,
                            Name = "Clothing",
                            Note = "Seed data",
                            UpdatedAt = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Food and beverages",
                            IsDeleted = false,
                            Name = "Groceries",
                            Note = "Seed data",
                            UpdatedAt = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 1, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Home and office furniture",
                            IsDeleted = false,
                            Name = "Furniture",
                            Note = "Seed data",
                            UpdatedAt = new DateTime(2025, 1, 23, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("AlliantProductManagementServer.Domain.Entities.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AlliantProductManagementServer.Domain.Entities.Customers.CustomerProduct", b =>
                {
                    b.HasOne("AlliantProductManagementServer.Domain.Entities.Customers.Customer", null)
                        .WithMany("Products")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlliantProductManagementServer.Domain.Entities.Products.Product", "Product")
                        .WithMany("Customers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AlliantProductManagementServer.Domain.Entities.Products.Product", b =>
                {
                    b.HasOne("AlliantProductManagementServer.Domain.Entities.Products.ProductCategory", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AlliantProductManagementServer.Domain.Entities.Customers.Customer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("AlliantProductManagementServer.Domain.Entities.Products.Product", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("AlliantProductManagementServer.Domain.Entities.Products.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
